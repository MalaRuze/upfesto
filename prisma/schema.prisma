datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Event {
  id              String          @id @default(uuid())
  title           String
  description     String?
  locationAddress String?
  locationLat     String?
  locationLon     String?
  imageUrl        String?
  dateCreated     DateTime        @default(now())
  dateUpdated     DateTime        @updatedAt
  dateFrom        DateTime
  dateTo          DateTime?
  host            User            @relation(fields: [hostId], references: [id], onDelete: Cascade)
  hostId          String
  attendances     Attendance[]
  posts           Posts[]
  subscribers     Subscribtions[]

  @@index([hostId])
}

model User {
  id              String          @id
  firstName       String
  lastName        String
  fullName        String
  email           String          @unique
  profileImageUrl String
  eventsHosted    Event[]
  attendances     Attendance[]
  subscribers     Subscribtions[]
}

model Attendance {
  userId   String
  user     User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId  String
  event    Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)
  response ResponseEnum

  @@id([userId, eventId])
  @@index([userId])
  @@index([eventId])
}

model Posts {
  id          String       @id @default(uuid())
  eventId     String
  event       Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)
  message     String
  type        PostTypeEnum
  dateCreated DateTime     @default(now())
  dateUpdated DateTime     @updatedAt

  @@index([eventId])
}

model Subscribtions {
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId     String
  event       Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  dateUpdated DateTime @updatedAt

  @@id([userId, eventId])
  @@index([userId])
  @@index([eventId])
}

enum ResponseEnum {
  YES
  NO
  MAYBE
}

enum PostTypeEnum {
  AUTO
  MANUAL
}
